name: Deploy and Manage Infrastructure

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'app/**'
      - 'docs/**'
      - 'readme.md'
      - '.github/workflows/app-deploy.yml'
      - 'backend_s3_create/**'
      - 'oidc/**'
  workflow_dispatch:
    inputs:
      terraform_action:
        description: 'Terraform Action (apply or destroy)'
        required: true
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write   # Required for OIDC.
  contents: read # This is required for actions/checkout.

jobs:
  deploy_infra:
    name: Deploy AWS Infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra
    steps:
      - name: Checkout Code/repository
        uses: actions/checkout@v4

      - name: Debug - Print Assumed Role ARN
        run: |
         echo "Attempting to assume role: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.OIDC_ROLE_NAME }}"


      # OIDC-based AWS authentication (no static AWS keys in needed in secrets).
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.OIDC_ROLE_NAME }}"
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.6"

      - name: Terraform Init 
        id: init
        run: terraform init
        continue-on-error: false

      - name: Terraform Plan
        id: plan 
        run: terraform plan -out=tfplan

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4.6.2
        with:
          name: terraform-plan
          path: infra/tfplan

      - name: Terraform Apply
        id: apply
        if: ${{ github.event.inputs.terraform_action == 'apply' }}
        run: terraform apply -auto-approve tfplan

      - name: Terraform Destroy
        id: destroy
        if: ${{ github.event.inputs.terraform_action == 'destroy' }}
        run: terraform destroy -auto-approve

         
      - name: Terraform Output
        id: output  
        run: terraform output -json > output.json

      - name: Upload Terraform Output
        uses: actions/upload-artifact@v4.6.2
        with:
          name: terraform-output
          path: output.json
          if-no-files-found: error
