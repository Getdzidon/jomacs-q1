name: Deploy and Manage Infrastructure

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'app/**'
      - 'docs/**'
      - 'readme.md'
      - '.github/workflows/app-deploy.yml'
  workflow_dispatch:
    inputs:
      terraform_action:
        description: 'Terraform Action (apply or destroy)'
        required: true
        type: choice
        options:
          - apply
          - destroy

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy_infra:
    name: Deploy AWS Infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (with environment variables)
        run: |
          terraform init -migrate-state \
            -backend-config="bucket=${{ secrets.S3_BUCKET_NAME }}" \
            -backend-config="key=${{ secrets.TF_STATE_KEY }}" \
            -backend-config="region=${{ secrets.S3_BUCKET_REGION }}"

      - name: Cache Terraform Modules & Providers
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d/plugin-cache
            .terraform
          key: terraform-${{ runner.os }}-${{ hashFiles('**/*.tf') }}

      - name: Restore Terraform State
        uses: actions/cache@v3
        with:
          path: ./infra/terraform.tfstate
          key: terraform-state-${{ github.run_id }}
          restore-keys: terraform-state-

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Refresh (before Apply or Destroy)
        run: |
          terraform init -migrate-state \
            -backend-config="bucket=${{ secrets.S3_BUCKET_NAME }}" \
            -backend-config="key=${{ secrets.TF_STATE_KEY }}" \
            -backend-config="region=${{ secrets.S3_BUCKET_REGION }}"
          terraform refresh

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve

      - name: Save Terraform State
        uses: actions/cache@v3
        with:
          path: ./infra/terraform.tfstate
          key: terraform-state-${{ github.run_id }}

      - name: Debug Terraform State (on Destroy)
        if: github.event.inputs.action == 'destroy'
        run: terraform state list

      - name: Terraform Destroy
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
        run: |
          terraform plan -destroy
          terraform destroy -auto-approve
